from aiogram_dialog import Window
from aiogram_dialog.widgets.kbd import Cancel, Button, Back
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.input import TextInput, MessageInput
from aiogram.enums.content_type import ContentType
from aiogram_dialog.widgets.media import DynamicMedia

from app.dialogs.hometask import states, keyboards, callbacks, getters, utils
from app.dialogs.hometask.utils import is_lesson_in_schedule, is_lesson_not_in_schedule


def hometask_window():
    return Window(
        Format(
            "*–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ* üìë\n\n{title_uncompleted_str}{tomorrow_uncompleted_amount_str}{uncompleted_amount_str}\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –≤–∞—Å –∑–∞–¥–∞–Ω–∏–µ üìö"
        ),
        keyboards.paginated_hometasks(callbacks.on_chosen_hometask),
        Button(
            Const("üìù –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ"),
            "hometask_create_button",
            callbacks.on_create_hometask,
            when=utils.is_editor,
        ),
        Button(
            Const("üìù –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ"),
            "hometask_suggest_button",
            callbacks.on_create_hometask,
            when=utils.is_not_editor,
        ),
        Cancel(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        state=states.HometaskMenu.select_hometask,
        getter=getters.get_hometasks,
    )


def hometask_info_window():
    return Window(
        DynamicMedia("image_last"),
        Format(
            "*{date} {lesson}*\n{status_str}\n\n{task}{materials_str}\n\nüîó *–ê–≤—Ç–æ—Ä* @{author_username}{edited_str}{completed_by_str}"
        ),
        Button(
            Const("‚úÖ –ü—Ä–∏–Ω—è—Ç—å"),
            "accept_suggested",
            callbacks.on_accept_suggested_hometask,
            when=utils.is_suggested
        ),
        Button(
            Format("{status_button}"),
            "status_button",
            callbacks.change_hometask_status,
            when=utils.is_not_suggested,
        ),
        Button(
            Format("{skip_button}"),
            "skip_button",
            callbacks.skip_hometask_status,
            when=utils.is_not_completed_and_not_suggested,
        ),
        Button(
            Const("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ"),
            "hometask_edit_button",
            callbacks.on_edit_hometask,
            when=utils.is_editor,
        ),
        Button(
            Const("üóìÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É"),
            "date_edit_button",
            callbacks.on_edit_date,
            when=utils.is_editor,
        ),
        Button(
            Const("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å"),
            "date_delete_button",
            callbacks.on_delete_hometask,
            when=utils.is_editor
        ),
        Cancel(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        state=states.HometaskInfo.info_hometask,
        getter=getters.get_hometask,
    )


def hometask_lesson_window():
    return Window(
        Const("*–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ* ‚úèÔ∏è", when=utils.is_editor),
        Const("*–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ* ‚úèÔ∏è", when=utils.is_not_editor),
        keyboards.paginated_lessons(callbacks.on_chosen_lesson),
        Cancel(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        state=states.HometaskCreate.lesson_hometask,
        getter=getters.get_lessons,
    )


def hometask_date_window():
    return Window(
        Const("*–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ* üóìÔ∏è", when=utils.is_editor),
        Const("*–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ* üóìÔ∏è", when=utils.is_not_editor),
        Const(
            "\n_–£—Ä–æ–∫–∞ –µ—â–µ –Ω–µ—Ç –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏, —É—á–∏—Ç—ã–≤–∞–π —ç—Ç–æ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–∞—Ç—ã_ ‚ö†Ô∏è",
            when=is_lesson_not_in_schedule,
        ),
        Button(
            Const("‚è≥ –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫"),
            "hometask_date_soon",
            callbacks.on_chosen_soon_date,
            when=is_lesson_in_schedule,
        ),
        keyboards.paginated_dates(callbacks.on_chosen_date),
        Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        state=states.HometaskCreate.date_hometask,
        getter=getters.get_dates,
    )


def hometask_task_window():
    return Window(
        Const("*–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ* üìù"),
        TextInput("hometask_task_input", on_success=callbacks.on_entered_task),
        Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        state=states.HometaskCreate.task_hometask,
    )


def hometask_images_window():
    return Window(
        Const(
            "*–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –∑–∞–¥–∞–Ω–∏—è* üì∑\n\n–ï—Å–ª–∏ –∂–µ –≤—ã –ø—Ä–∏–∫—Ä–µ–ø–∏–ª–∏ –Ω—É–∂–Ω—ã–µ —Ñ–æ—Ç–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –≥–æ—Ç–æ–≤–æ ‚úÖ"
        ),
        MessageInput(callbacks.on_sent_images, ContentType.PHOTO),
        Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        Button(
            Const("‚úÖ –ì–æ—Ç–æ–≤–æ"),
            "hometask_done_create_hometask",
            callbacks.on_done_create_hometask,
        ),
        state=states.HometaskCreate.image_hometask,
    )


def hometask_edit_date_window():
    return Window(
        Const("*–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ* üóìÔ∏è"),
        Const(
            "\n_–£—Ä–æ–∫–∞ –µ—â–µ –Ω–µ—Ç –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏, —É—á–∏—Ç—ã–≤–∞–π —ç—Ç–æ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–∞—Ç—ã_ ‚ö†Ô∏è",
            when=is_lesson_not_in_schedule,
        ),
        Button(
            Const("‚è≥ –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫"),
            "hometask_edit_date_soon",
            callbacks.on_chosen_soon_edit_date,
            when=is_lesson_in_schedule,
        ),
        keyboards.paginated_dates(callbacks.on_chosen_edit_date),
        Cancel(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        state=states.HometaskDateEdit.date_hometask,
        getter=getters.get_dates,
    )


def hometask_edit_task_window():
    return Window(
        Format(
            "*–¢–µ–∫—É—â–µ–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ* üìö\n\n`{task}`\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ üìù"
        ),
        TextInput("hometask_task_input", on_success=callbacks.on_entered_edit_task),
        Cancel(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        state=states.HometaskEdit.task_hometask,
        getter=getters.get_hometask_task,
    )


def hometask_edit_done_window():
    return Window(
        Format("–ò–∑–º–µ–Ω–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ ‚úèÔ∏è\n\n`{task}`"),
        Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        Button(
            Const("‚úÖ –ì–æ—Ç–æ–≤–æ"),
            "hometask_done_edit_hometask",
            callbacks.on_done_edit_hometask,
        ),
        state=states.HometaskEdit.confirm_hometask,
        getter=getters.get_hometask_edited,
    )


def hometask_delete_window():
    return Window(
        Format(
            "–ï—Å–ª–∏ –≤—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ *–£–¥–∞–ª–∏—Ç—å* üóëÔ∏è\n\n_–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞–∑–∞–¥, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –î/–ó_ ‚ö†Ô∏è"
        ),
        Cancel(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        Button(
            Const("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å"),
            "hometask_delete_hometask",
            callbacks.on_delete_confirm_hometask,
        ),
        state=states.HometaskDelete.confirm_hometask,
    )
